# --------------------------- #
#      Written by KIRYA       #
#   Created on: 14.03.2025    #
# Last updated on: 14.03.2025 #
# --------------------------- #

# --------------------------------------------------------------------------- #
# EXTERNAL LIBRARIES                                                          #
# --------------------------------------------------------------------------- #

from telebot import TeleBot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

# --------------------------------------------------------------------------- #
# GLOBALS                                                                     #
# --------------------------------------------------------------------------- #

# --- #
# BOT #
# --- #

BOT_TOKEN = '<put-your-token-here>'
BOT = TeleBot(BOT_TOKEN)

# ------ #
# STATES #
# ------ #

current_state = None
STATES = ['start', 'profile_maker_age', 'profile_maker_sex',
          'profile_maker_preffered_sex', 'profile_maker_city', 'profile_maker_name',
          'profile_maker_description', 'profile_maker_photo_video', 'profile_maker_show_result',
          'search_loop']

# --------------- #
# ALLOWED ANSWERS #
# --------------- #

STATE_START_ALLOWED_ANSWERS = ['üëç']
STATE_SEX_ALLOWED_ANSWERS = ['–Ø ‚Äî –ø–∞—Ä–µ–Ω—å', '–Ø ‚Äî –¥–µ–≤—É—à–∫–∞']
STATE_PREFFERED_SEX_ALLOWED_ANSWERS = ['–î–µ–≤—É—à–∫–∏', '–ü–∞—Ä–Ω–∏', '–í—Å–µ —Ä–∞–≤–Ω–æ']
STATE_PROFILE_MAKER_SHOW_RESULTS_ALLOWED_ANSWERS = ['–î–∞', '–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É']

# -------------- #
# USER'S PROFILE #
# -------------- #

user_age = None
user_sex = None
user_preffered_sex = None
user_city = None
user_name = None
user_description = None
user_photo_video = None

# --------------------------------------------------------------------------- #
# COMMANDS                                                                    #
# --------------------------------------------------------------------------- #

# --------------- #
# "START" COMMAND #
# --------------- #

@BOT.message_handler(commands=['start'])
def cmd_start(msg):
    global current_state
    
    current_state = STATES[0]
    
    BOT.send_message(msg.chat.id,
                     '–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–µ–±–µ –ø–∞—Ä—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –¥—Ä—É–∑–µ–π. –ú–æ–∂–Ω–æ —è –∑–∞–¥–∞–º —Ç–µ–±–µ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤?',
                     reply_markup=cmd_start_keyboard())
                     
def cmd_start_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton(STATE_START_ALLOWED_ANSWERS[0]))
    return markup

# --------------------------------------------------------------------------- #
# HANDLERS                                                                    #
# --------------------------------------------------------------------------- #

# ---------------- #
# MESSAGES HANDLER #
# ---------------- #

# ----------------------------------------- #
#              !!! WARNING !!!              #
# THIS SECTION IS FULL OF POOR-QUALITY CODE #
#            YOU'VE BEEN WARNED             #
# ----------------------------------------- #

@BOT.message_handler(func = lambda msg: True, content_types=['text', 'photo'])
def messages_handler(msg):
    global current_state, user_age, user_sex,\
           user_preffered_sex, user_city, user_name,\
           user_description, user_photo_video
    
    match current_state:
        
        case 'start':
            if (msg.text in STATE_START_ALLOWED_ANSWERS):
                match msg.text:
                    case 'üëç':
                        current_state = STATES[1]
                        profile_maker_age(msg)
                        
        case 'profile_maker_age':
            if (not msg.text.isdigit()):
                BOT.send_message(msg.chat.id, '–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç. –¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.')
            else:
                user_age = msg.text
                current_state = STATES[2]
                profile_maker_sex(msg)
            
        case 'profile_maker_sex':
            if (msg.text in STATE_SEX_ALLOWED_ANSWERS):
                match msg.text:
                    case '–Ø ‚Äî –ø–∞—Ä–µ–Ω—å':
                        user_sex = 'male'
                    case '–Ø ‚Äî –¥–µ–≤—É—à–∫–∞':
                        user_sex = 'female'
                current_state = STATES[3]
                profile_maker_preffered_sex(msg)
            
        case 'profile_maker_preffered_sex':
            if (msg.text in STATE_PREFFERED_SEX_ALLOWED_ANSWERS):
                match msg.text:
                    case '–î–µ–≤—É—à–∫–∏':
                        user_preffered_sex = 'females'
                    case '–ü–∞—Ä–Ω–∏':
                        user_preffered_sex = 'males'
                    case '–í—Å–µ —Ä–∞–≤–Ω–æ':
                        user_preffered_sex = 'everyone'
                current_state = STATES[4]
                profile_maker_city(msg)
            
        case 'profile_maker_city':
            if (not msg.text.isalpha()):
                BOT.send_message(msg.chat.id, '–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞. –¢–æ–ª—å–∫–æ –±—É–∫–≤—ã.')
            else:
                user_city = msg.text
                current_state = STATES[5]
                profile_maker_name(msg)
            
        case 'profile_maker_name':
            if (not msg.text.isalpha()):
                BOT.send_message(msg.chat.id, '–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è. –¢–æ–ª—å–∫–æ –±—É–∫–≤—ã.')
            else:
                user_name = msg.text
                current_state = STATES[6]
                profile_maker_description(msg)
            
        case 'profile_maker_description':
            if (len(msg.text) > 900):
                BOT.send_message(msg.chat.id, '–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ. –õ–∏–º–∏—Ç ‚Äî 900 –∑–Ω–∞–∫–æ–≤ (–≤–∫–ª—é—á–∞—è –ø—Ä–æ–±–µ–ª—ã).')
            else:
                user_description = msg.text
                current_state = STATES[7]
                profile_maker_photo_video(msg)
            
        case 'profile_maker_photo_video':
            if (not msg.content_type == 'photo'):
                BOT.send_message(msg.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –ª–∏–±–æ –æ–Ω–æ –Ω–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.')
            else:
                user_photo_video = msg
                current_state = STATES[8]
                profile_maker_show_result(msg)
            
        case 'profile_maker_show_result':
            if (msg.text in STATE_PROFILE_MAKER_SHOW_RESULTS_ALLOWED_ANSWERS):
                match msg.text:
                    case '–î–∞':
                        current_state = STATES[9]
                        search_loop(msg)
                    case '–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É':
                        current_state = STATES[1]
                        profile_maker_age(msg)
            
        case _:
            BOT.send_message(msg.chat.id, '–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞.')

# --------------------------------------------------------------------------- #
# FUNCTIONS                                                                   #
# --------------------------------------------------------------------------- #

# ------------- #
# PROFILE MAKER #
# ------------- #

def profile_maker_age(msg):
    BOT.send_message(msg.chat.id, '–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
    
def profile_maker_sex(msg):
    BOT.send_message(msg.chat.id, '–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –ø–æ–ª–æ–º.',
                     reply_markup=profile_maker_sex_keyboard())
    
def profile_maker_sex_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton(STATE_SEX_ALLOWED_ANSWERS[0]))
    markup.add(KeyboardButton(STATE_SEX_ALLOWED_ANSWERS[1]))
    return markup
    
def profile_maker_preffered_sex(msg):
    BOT.send_message(msg.chat.id, '–ö—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?',
                     reply_markup=profile_maker_preffered_sex_keyboard())
    
def profile_maker_preffered_sex_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton(STATE_PREFFERED_SEX_ALLOWED_ANSWERS[0]))
    markup.add(KeyboardButton(STATE_PREFFERED_SEX_ALLOWED_ANSWERS[1]))
    markup.add(KeyboardButton(STATE_PREFFERED_SEX_ALLOWED_ANSWERS[2]))
    return markup
    
def profile_maker_city(msg):
    BOT.send_message(msg.chat.id, '–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?')
    
def profile_maker_name(msg):
    BOT.send_message(msg.chat.id, '–ö–∞–∫ –º–Ω–µ —Ç–µ–±—è –Ω–∞–∑—ã–≤–∞—Ç—å?')
    
def profile_maker_description(msg):
    BOT.send_message(msg.chat.id, '–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ –∏ –∫–æ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏, —á–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å –∑–∞–Ω—è—Ç—å—Å—è. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ª—É—á—à–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ –∫–æ–º–ø–∞–Ω–∏—é.')
    
def profile_maker_photo_video(msg):
    BOT.send_message(msg.chat.id, '–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –∑–∞–ø–∏—à–∏ –≤–∏–¥–µ–æ üëç (–¥–æ 15 —Å–µ–∫.), –µ–≥–æ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.')
    
def profile_maker_show_result(msg):
    BOT.send_message(msg.chat.id, '–¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:')
    BOT.send_photo(msg.chat.id, user_photo_video.photo[-1].file_id,
                   '{0}, {1}, {2}\n\n{3}'.format(user_name, user_age, user_city, user_description))
    BOT.send_message(msg.chat.id, '–í—Å–µ –≤–µ—Ä–Ω–æ?',
                     reply_markup=profile_maker_show_result_keyboard())
    
def profile_maker_show_result_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton(STATE_PROFILE_MAKER_SHOW_RESULTS_ALLOWED_ANSWERS[0]))
    markup.add(KeyboardButton(STATE_PROFILE_MAKER_SHOW_RESULTS_ALLOWED_ANSWERS[1]))
    return markup

# ------ #
# SEARCH #
# ------ #

def search_loop(msg):
    return

# --------------------------------------------------------------------------- #
# ENTRY POINT                                                                 #
# --------------------------------------------------------------------------- #

if (__name__ == '__main__'):
    BOT.infinity_polling()